[project]
name = "botocore"
description = "Low-level, data-driven core of boto3."
readme = "README.md"
authors = [
  {name = "Amazon Web Services"},
]
requires-python = ">=3.9"
keywords = ["aws", "sdk", "models"]
license = {text = "Apache-2.0"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Natural Language :: English",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]
dynamic = ["version"]

dependencies = [
    "jmespath>=0.7.1,<2.0.0",
    "python-dateutil>=2.1,<3.0.0",
    # Prior to Python 3.10, Python doesn't require openssl 1.1.1
    # but urllib3 2.0+ does. This means all botocore users will be
    # broken by default on Amazon Linux 2 and AWS Lambda without this pin.
    "urllib3>=1.25.4,<1.27 ; python_version < '3.10'",
    "urllib3>=1.25.4,!=2.2.0,<3 ; python_version >= '3.10'",
]

[project.optional-dependencies]
crt = ["awscrt==0.23.8"]

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow",
    "validates_models: marks tests as one which validates service models",
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Format same as Black.
line-length = 79
indent-width = 4

target-version = "py39"

[tool.ruff.lint]
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "E4", # pycodestyle
    "E7", # pycodestyle
    "E9", # pycodestyle
    "F", # Pyflakes
    "I", # Import sorting
    "UP", # PyUpgrade
    "G", # Log formatting
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings, spaces for indents
# and trailing commas.
quote-style = "preserve"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

docstring-code-format = false
docstring-code-line-length = "dynamic"
